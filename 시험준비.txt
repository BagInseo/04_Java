배열의 정의 : 변수를 묶음으로 다루는 것
객체 : new 연산자에 의해서 Heap 영역에 class 내용대로 생성(할당) 된 것

객체 배열 : 객체 참조형 변수를 묶음으로 다루는 것

==========================================
1바이트=8비트
자료형
	1.논리형: boolean (true/false)-1byte
	2.숫자형: (정수)byte, int(기본형-4byte), short, long(8byte-숫자 뒤에 L) 
		(실수)double(기본형-8byte), float(4byte-숫자 뒤에 f)
	3.문자형: char('')=> 문자 하나
참조형 	   문자형: String("")


자동 형변환 : 값의 범위가 작은 자료형을 값이 큰 자료형으로 변환한다
int a=12;
double b 3.3;
double sum=a+b
결과 : 15.3(12.0+3.3)

강제 형변환 : 값이 큰 자료형을 값이 작은 자료형으로 변환
=> 데이터 손실 발생 가능성이 있음
(자료형) 변수 혹은 값


난수 + 강제 형변환
int random= (int)(Math.ramdom()*10+1)
=> 난수에서 발생하는 소수 부분을 강제 형변환을 통해 제거


상수
-값 변경 불가
-변수명 표기할 때는 대문자로만



===============================================
Print
System.out.print() : ()내의 값을 출력 후 줄바꿈 x
System.out.println() : ()내의 값을 출력 후 줄바꿈 o

%d : 10진법 정수 (Decimal) (byte,short,int)
%c : 문자 (char)
%s : 문자열 (String)
%b : 논리형 (boolean)
%f : 실수형 (float/double)

양수: 오른쪽 정렬
음수: 왼쪽 정렬
%숫자d : 정수가 출력된 칸을 숫자만큼 확보
Ex)%6d : ■■■■■■(정수)
%.숫자f: 소수점 아래 몇 째 자리까지 표시할지 지정
	(지정된 자리 아래에서 반올림 처리)

================================================
Scanner
import java.util.Scanner; 
-import : 다른 패키지에 존재하는 클래스 가져오기
- 사용자부터 입력 받기위해 자바에서 제공하는 클래스
-java.util 패키지에 존재한다. 

Scanner.next(): 단어(String) 1개 입력, 공백 입력 시 종료
Scanner.nextLine(): 문자열(String)1개 입력, 엔터 입력 시 종료
Scanner.nextInt(): int형 정수 1개 입력
Scanner.nextLong(): long형 정수 입력 1개 입력
Scanner.nextDouble: double형 실수 1개 입력 

Scanner를 사용하기 위해서
1. 클래스의 윗 부분에 Scanner를 import하기 (import java.util.Scanner)
2. Scanner 객체 생성하기 (Scanner sc= new Scanner(System.in))

입력받은 정수를 변수 num에 대입하기
System.out.print("정수 입력 : ")
int num=sc.nextInt();
입력받은 실수를 변수 num2에 대입하기
System.out.print("실수 입력 : ")
double num2=sc.nextDouble();
입력받은 단어 2개를 변수 w1,w2에 대입하기
System.out.print("단어 입력(2개) : ") //사과 바나나
String w1= sc.next();
String w2=sc.next();

================================================
//입력 받은 정수가 3의 배수가 맞는지 확인하기
1. Scanner import하기(import java.util.Scanner)
2. 메소드 작성
public void method1(){
	Scanner sc= new Scanner(System.in);

	System.out.print("정수 입력 : ");
	int input=sc.nextInt();

	boolean isTrue=input%3==0;
	System.out.printf("%d는 3의 배수 : %b",input, isTrue);

	}

==========================================
if문 => 조건식 ? 참 : 거짓;

============================================
실행 클래스와 기능 클래스
기능 클래스 ex)OperaotrEx 안에 기능 메서드 ex)method1()
실행 클래스는 메인 메서드를 선언한 후 가져올 클래스의 객체를 생성해야 한다. 
ex)
public class OperatorRun{
	public static void main(String[] args){
		OperatorEx ex=new OperatorEx();
		ex.method1(); //호출
		}
	}

============================================


